version: "3"
services:
  proxy:
    image: proxy
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./proxy/conf.d:/etc/nginx/conf.d:rw
      - ./proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./proxy/certs:/etc/nginx/certs:ro
    restart: always
    logging:
      options:
        max-size: 5m
        max-file: "5"
    network_mode: host

  dns:
    image: andyshinn/dnsmasq
    container_name: dns
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    extra_hosts:
      - "712.local:127.0.0.1"
      - "730.local:127.0.0.1"
    restart: always
    networks:
      test-server-net:
        ipv4_address: 172.19.0.2

  dba:
    image: dba-mariadb
    build:
      context: ./dba
      dockerfile: Dockerfile
    container_name: dba
    ports:
      - "3306:3306"
    volumes:
      - ./dba/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_ROOT_HOST: "172.19.0.%"
      TZ: Asia/Tokyo
    restart: always
    logging:
      options:
        max-size: 5m
        max-file: "5"
    networks:
      test-server-net:
        ipv4_address: 172.19.0.3

  web:
    image: web
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        SERVER_NAME: $SERVER_NAME
    container_name: web
    command: /sbin/init
    volumes:
      - ./web/www:/var/www
      - ./web/conf.d:/etc/httpd/conf.d
    tty: true
    stdin_open: true
    privileged: true
    restart: always
    external_links:
      - proxy
      - dba
    logging:
      options:
        max-size: 5m
        max-file: "5"
    networks:
      test-server-net:
        ipv4_address: 172.19.0.4

networks:
  test-server-net:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.19.0.0/16